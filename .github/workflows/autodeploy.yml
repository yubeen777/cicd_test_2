name: autodeployment with git-action

on:
  push:
    branches:
      - main

jobs:
  build-job:
    runs-on: ubuntu-latest

    steps:
      - name: github repository 소스 가져오기
        uses: actions/checkout@v4

      - name: JDK17 설치하기
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: application yml 추가
        run: |
          mkdir -p src/main/resources || true
          echo "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/applicaiton.yml
      #          ls -al ./src/main/resources
      #          cat ./src/main/resources/applicaiton.yml

      - name: jar(실행) 파일 생성하기
        run: |
          chmod +x ./gradlew   # 실행권한 추가
          ./gradlew clean build   # 기존 실행 파일 삭제 후 재생성

      - name: 빌드된 jar 파일 이름변경 및 이동하기
        run: |
          pwd
          mv ./build/libs/*SNAPSHOT.jar ./app.jar
          ls -al

      - name: app.jar 실행 파일을 ec2 로 전송하기
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: ./app.jar
          target: /home/ubuntu/prod/tobe

  deploy-job:
    needs: build-job   # build-job 이 완료되면 진행
    runs-on: ubuntu-latest

    steps:
      - name: 현재 실행중인 프로세스 대신 새로운 app.jar 실행 (EC2 ssh 접속)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script_stop: true
          script: |
            sudo fuser -k -n tcp 8080 || true
            rm -rf /home/ubuntu/prod/cur
            mkdir /home/ubuntu/prod/cur
            cd /home/ubuntu/prod/cur
            mv ../tobe/app.jar .
            sudo nohup java -jar app.jar > ./output.log 2>&1 &